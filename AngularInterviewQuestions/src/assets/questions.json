[
    {
        "QuestionId": 1,
        "Text": "What did you learn about Angular yesterday/this week?",
        "Category": "General",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 2,
        "Text": "What are some of the reasons you would choose to use Angular in your project?",
        "Category": "General",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 3,
        "Text": "What did you like about working with Angular?",
        "Category": "General",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 4,
        "Text": "How do you keep your Angular code more readable and maintainable?",
        "Category": "General",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 5,
        "Text": "What does testable code mean to you in context of Angular?",
        "Category": "General",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 6,
        "Text": "What does reusable code mean to you in context of Angular?",
        "Category": "General",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 7,
        "Text": "How do you define transition between two states in Angular?",
        "Category": "Animations",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 8,
        "Text": "How do you define a wildcard state?",
        "Category": "Animations",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 9,
        "Text": "What is a good use case for ngrx/store?",
        "Category": "Architecture",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 10,
        "Text": "What is a good use case for ngrx/entity?",
        "Category": "Architecture",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 11,
        "Text": "Can you talk about a bug related to a race condition, how to solve it and how to test it?",
        "Category": "Architecture",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 12,
        "Text": "What is the difference between a smart/container component and dumb/presentational component? What is a good use case example? What are the advantages?",
        "Category": "Architecture",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 13,
        "Text": "What does this code do:",
        "Category": "API",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": "<div *ngIf='someObservableData | async as data; else loading'>{{data}}</div>\r\n\r\n<ng-template #loading>\r\nLoading Data...\r\n</ng-template>",
            "HasSnippets": true
        }
    },
    {
        "QuestionId": 14,
        "Text": "Why would you use renderer methods instead of using native element methods?",
        "Category": "API",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 15,
        "Text": "How would you control size of an element on resize of the window in a component?",
        "Category": "API",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 16,
        "Text": "What would be a good use for NgZone service?",
        "Category": "API",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 17,
        "Text": "What are the bootstrap options for NgZone? Why would you use them? (Angular 5+)",
        "Category": "API",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 18,
        "Text": "How would you protect a component being activated through the router?",
        "Category": "API",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 19,
        "Text": "How would you insert an embedded view from a prepared TemplateRef?",
        "Category": "API",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 20,
        "Text": "What is the difference between @ViewChild() and @ContentChild()",
        "Category": "API",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 21,
        "Text": "How can you add an active class to a selected element in a list component?",
        "Category": "Template Syntax",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 22,
        "Text": "What is a template variable. How would you use it?",
        "Category": "Template Syntax",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 23,
        "Text": "What is the difference of using a property binding verses a function binding on a template?",
        "Category": "Template Syntax",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 24,
        "Text": "What happens if you subscribe to a data source multiple times with async pipe?",
        "Category": "Template Syntax",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 25,
        "Text": "What is the difference between ng-content, ng-container and ng- template?",
        "Category": "Template Syntax",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 26,
        "Text": "When you create a data-binding in Angular, are you working with attributes or properties? What is the difference anyway?",
        "Category": "Template Syntax",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 27,
        "Text": "When can you omit the brackets in template binding?",
        "Category": "Template Syntax",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 28,
        "Text": "What is the minimum definition of a component?",
        "Category": "Component",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 29,
        "Text": "What is the difference between a component and a directive?",
        "Category": "Component",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 30,
        "Text": "How do components communicate with each other?",
        "Category": "Component",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 31,
        "Text": "How do you create two way data binding in Angular?",
        "Category": "Component",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 32,
        "Text": "How would you create a component to display error messages throughout your application?",
        "Category": "Component",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 33,
        "Text": "What does a lean component mean to you?",
        "Category": "Component",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 34,
        "Text": "How would you pass data from a parent component to a child component?",
        "Category": "Component Interaction &amp; State Management",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 35,
        "Text": "How would you pass data from a child component to a parent component?",
        "Category": "Component Interaction &amp; State Management",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 36,
        "Text": "Which components will be notified when an event is emitted?",
        "Category": "Component Interaction &amp; State Management",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 37,
        "Text": "Tell me about the different ways how you would get data to your components from a service and talk about why would you use one way vs the other?",
        "Category": "Component Interaction &amp; State Management",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 38,
        "Text": "How would you use cached data?",
        "Category": "Component Interaction &amp; State Management",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 39,
        "Text": "When do you use template driven vs model driven forms? Why?",
        "Category": "Forms",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 40,
        "Text": "How do you submit a form?",
        "Category": "Forms",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 41,
        "Text": "What's the difference between NgForm, FormGroup, and FormControl? How do they work together?",
        "Category": "Forms",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 42,
        "Text": "What's the advantage of using FormBuilder?",
        "Category": "Forms",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 43,
        "Text": "How do you add form validation to a form built with FormBuilder?",
        "Category": "Forms",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 44,
        "Text": "What's the difference between dirty, touched, and pristine on a form element?",
        "Category": "Forms",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 45,
        "Text": "How can you access validation errors in the template to display error messages?",
        "Category": "Forms",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 46,
        "Text": "What is async validation and how is it done?",
        "Category": "Forms",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 47,
        "Text": "What is the purpose of NgModule?",
        "Category": "NgModules",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 48,
        "Text": "How do you decide to create a new NgModule?",
        "Category": "NgModules",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 49,
        "Text": "What are the attributes that you can define in an NgModule annotation?",
        "Category": "NgModules",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 50,
        "Text": "What is the difference between a module's forRoot() and forChild() methods and why do you need it?",
        "Category": "NgModules",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 51,
        "Text": "What would you have in a shared module?",
        "Category": "NgModules",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 52,
        "Text": "What would you not put shared module?",
        "Category": "NgModules",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 53,
        "Text": "What module would you put a singleton service whose instance will be shared throughout the application (e.g. ExceptionService andLoggerService)?",
        "Category": "NgModules",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 54,
        "Text": "What is the purpose of exports in a NgModule?",
        "Category": "NgModules",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 55,
        "Text": "What is the difference between exports and declarations in NgModule?",
        "Category": "NgModules",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 56,
        "Text": "Why is it bad if SharedModule provides a service to a lazy loaded module?",
        "Category": "NgModules",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 57,
        "Text": "What is the use case of services?",
        "Category": "Services",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 58,
        "Text": "How are the services injected to your application?",
        "Category": "Services",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 59,
        "Text": "How do you unit test a service with a dependency?",
        "Category": "Services",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 60,
        "Text": "Why is it a bad idea to create a new service in a component like the one below?",
        "Category": "Services",
        "Snippets": {
            "TypeScriptSnippet": "let service = new DataService();",
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": true
        }
    },
    {
        "QuestionId": 61,
        "Text": "What is a structural directive?",
        "Category": "Structural Directives",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 62,
        "Text": "How do you identify a structural directive in html?",
        "Category": "Structural Directives",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 63,
        "Text": "When creating your own structural directives, how would you decide on hiding or removing an element? What would be the advantages or disadvantages of choosing one method rather than the other?",
        "Category": "Structural Directives",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 64,
        "Text": "What are some of the Angular Style Guide suggestions you follow on your code? Why?",
        "Category": "Style Guide",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 65,
        "Text": "Is it important to have a style guide? Why/not?",
        "Category": "Style Guide",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 66,
        "Text": "How would you select a custom component to style it.",
        "Category": "Styling",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 67,
        "Text": "What pseudo-class selector targets styles in the element that hosts the component?",
        "Category": "Styling",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 68,
        "Text": "How would you select all the child components' elements?",
        "Category": "Styling",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 69,
        "Text": "How would you select a css class in any ancestor of the component host element, all the way up to the document root?",
        "Category": "Styling",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 70,
        "Text": "What selector force a style down through the child component tree into all the child component views?",
        "Category": "Styling",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 71,
        "Text": "What does :host-context() pseudo-class selector targets?",
        "Category": "Styling",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 72,
        "Text": "What does the following css do?",
        "Category": "Styling",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": ":host-context(.theme-light) h2 {\r\n            background-color: red;\r\n}",
            "HtmlSnippet": null,
            "HasSnippets": true
        }
    },
    {
        "QuestionId": 73,
        "Text": "What is the possible order of lifecycle hooks.",
        "Category": "Lifecycle Hooks",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 74,
        "Text": "When will ngOnInit be called?",
        "Category": "Lifecycle Hooks",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 75,
        "Text": "How would you make use of ngOnInit()?",
        "Category": "Lifecycle Hooks",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 76,
        "Text": "What would you consider a thing you should be careful doing on ngOnInit()?",
        "Category": "Lifecycle Hooks",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 77,
        "Text": "What is the difference between ngOnInit() and constructor() of a component?",
        "Category": "Lifecycle Hooks",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 78,
        "Text": "What is a good use case for ngOnChanges()?",
        "Category": "Lifecycle Hooks",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 79,
        "Text": "What is the difference between an observable and a promise?",
        "Category": "Observables RxJS",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 80,
        "Text": "What is the difference between an observable and a subject?",
        "Category": "Observables RxJS",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 81,
        "Text": "What are some of the angular apis that are using observables?",
        "Category": "Observables RxJS",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 82,
        "Text": "How would you cache an observable data?",
        "Category": "Observables RxJS",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 83,
        "Text": "How would you implement a multiple api calls that needs to happen in order using rxjs?",
        "Category": "Observables RxJS",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 84,
        "Text": "What is the difference between switchMap, concatMap and mergeMap?",
        "Category": "Observables RxJS",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 85,
        "Text": "How would you make sure an api call that needs to be called only once but with multiple conditions. Example: if you need to get some data in multiple routes but, once you get it, you can reuse it in the routes that needs it, therefor no need to make another call to your backend apis.",
        "Category": "Observables RxJS",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 86,
        "Text": "How would you implement a brush behavior using rxjs?",
        "Category": "Observables RxJS",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 87,
        "Text": "How would you implement a color picker with rxjs?",
        "Category": "Observables RxJS",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 88,
        "Text": "If you need to respond to two different Observable/Subject with one callback function, how would you do it?(ex: if you need to change the url through route parameters and with prev/next buttons).",
        "Category": "Observables RxJS",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 89,
        "Text": "What is the difference between scan() vs reduce() ?",
        "Category": "Observables RxJS",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 90,
        "Text": "What are some of the things that you pay attention to, to make sure your angular application is performant?",
        "Category": "Performance",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 91,
        "Text": "What tools would you use to find a performance issue in your code?",
        "Category": "Performance",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 92,
        "Text": "What tools have you used to improve the performance of your application?",
        "Category": "Performance",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 93,
        "Text": "What are some ways you may improve your website's scrolling performance?",
        "Category": "Performance",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 94,
        "Text": "Explain the difference between layout, painting and compositing.",
        "Category": "Performance",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 95,
        "Text": "Have you seen Jeff Cross's NgCruise talk on performance?",
        "Category": "Performance",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 96,
        "Text": "What is a pure pipe?",
        "Category": "Pipes",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 97,
        "Text": "What is an async pipe?",
        "Category": "Pipes",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 98,
        "Text": "What kind of data can be used with async pipe?",
        "Category": "Pipes",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 99,
        "Text": "How do you create a custom pipe?",
        "Category": "Pipes",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 100,
        "Text": "How does async pipe prevents memory leeks?",
        "Category": "Pipes",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 101,
        "Text": "What is the difference between pure and impure pipes?",
        "Category": "Pipes",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 102,
        "Text": "What is the difference between RouterModule.forRoot() vs RouterModule.forChild()?  Why is it important?",
        "Category": "Router",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 103,
        "Text": "How does loadChildren property work?",
        "Category": "Router",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 104,
        "Text": "Do you need a Routing Module? Why/not?",
        "Category": "Router",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 105,
        "Text": "When does a lazy loaded module is loaded?",
        "Category": "Router",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 106,
        "Text": "Below link doesn't work. Why? How do I fix it?",
        "Category": "Router",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": "<div routerLink='product.id'></div>",
            "HasSnippets": true
        }
    },
    {
        "QuestionId": 107,
        "Text": "Can you explain the difference between ActivatedRoute and RouterState?",
        "Category": "Router",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 108,
        "Text": "How do you debug router?",
        "Category": "Router",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 109,
        "Text": "Why do we need route guards?",
        "Category": "Router",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 110,
        "Text": "What is a RouterOutlet?",
        "Category": "Router",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 111,
        "Text": "What are some of the different tests types you can write?",
        "Category": "Testing",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 112,
        "Text": "How do you mock a service to inject in an integration test?",
        "Category": "Testing",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 113,
        "Text": "How do you mock a module in an integration test?",
        "Category": "Testing",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 114,
        "Text": "How do you test a component that has a dependency to an async service?",
        "Category": "Testing",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 115,
        "Text": "What is the difference between 'async()' and 'fakeAsync()'?",
        "Category": "Testing",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 116,
        "Text": "Why do you need type definitions?",
        "Category": "TypeScript",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 117,
        "Text": "How would you define a custom type?",
        "Category": "TypeScript",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 118,
        "Text": "What is the difference between an Interface and a Class?",
        "Category": "TypeScript",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 119,
        "Text": "First line below gives compile error, second line doesn't. Why?",
        "Category": "TypeScript",
        "Snippets": {
            "TypeScriptSnippet": "someService.someMethod(x);\r\nsomeService['someMethod'](x);",
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": true
        }
    },
    {
        "QuestionId": 120,
        "Text": "What are Discriminated union types?",
        "Category": "TypeScript",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 121,
        "Text": "How do you define Object of Objects type in typescript?",
        "Category": "TypeScript",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 122,
        "Text": "How can you capture the 'type' the user provides (e.g. number), so that we can use that information later.",
        "Category": "TypeScript",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 123,
        "Text": "Explain the difference between var, let and const key words.",
        "Category": "JavaScript",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 124,
        "Text": "Could you make sure a const value is garbage collected?",
        "Category": "JavaScript",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 125,
        "Text": "Explain Object.assign and possible use cases.",
        "Category": "JavaScript",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 126,
        "Text": "Explain Object.freeze and possible use cases.",
        "Category": "JavaScript",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 127,
        "Text": "Explain the code below. How many times the createVal function is called?",
        "Category": "JavaScript",
        "Snippets": {
            "TypeScriptSnippet": "function createVal(){\r\n            return Math.random();\r\n};\r\n\r\nfunction fun( val =  createVal()){\r\n            // Do something with val...\r\n}\r\n\r\nfun();\r\nfun(5);\r\n",
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": true
        }
    },
    {
        "QuestionId": 128,
        "Text": "What is the spread operator doing in this function call? Seriously!",
        "Category": "JavaScript",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 129,
        "Text": "What would these components render?",
        "Category": "Coding",
        "Snippets": {
            "TypeScriptSnippet": "import { Component, ContentChildren, Directive, Input, QueryList } from '@angular/core';\r\n\r\n@Directive({selector: 'pane'})\r\nexport class Pane {\r\n@Input() id: string;\r\n}\r\n\r\n@Component({\r\nselector: 'tab',\r\ntemplate: `\r\n    <div>panes: {{serializedPanes}}</div>\r\n  `\r\n})\r\nexport class Tab {\r\n@ContentChildren(Pane) panes: QueryList<Pane>;\r\n            get serializedPanes(): string { return this.panes ? this.panes.map(p => p.id).join(', ') : ''; }\r\n}\r\n\r\n@Component({\r\nselector: 'example-app',\r\ntemplate: `\r\n    <tab>\r\n      <pane id=\"1\"></pane>\r\n      <pane id=\"2\"></pane>\r\n      <pane id=\"3\" *ngIf=\"shouldShow\"></pane>\r\n    </tab>\r\n    <button (click)=\"show()\">Show 3</button>\r\n  `,\r\n})\r\nexport class ContentChildrenComp {\r\nshouldShow = false;\r\nshow() { this.shouldShow = true; }\r\n}",
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": true
        }
    },
    {
        "QuestionId": 130,
        "Text": "What's a cool project that you've recently worked on?",
        "Category": "Fun",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 131,
        "Text": "What are some things you like about the developer tools you use?",
        "Category": "Fun",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 132,
        "Text": "Who inspires you in the angular community?",
        "Category": "Fun",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 133,
        "Text": "Do you have any pet projects? What kind?",
        "Category": "Fun",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 134,
        "Text": "How did you design the architecture of your project?",
        "Category": "Fun",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 135,
        "Text": "What's your favorite feature of Angular?",
        "Category": "Fun",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 136,
        "Text": "What is your least favorite thing about Angular? (Please share your thoughts by making a pull request to angularFeelings)",
        "Category": "Fun",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 137,
        "Text": "How do you like your coffee?",
        "Category": "Fun",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    },
    {
        "QuestionId": 138,
        "Text": "If you could decide on a new feature for angular, what would it be?",
        "Category": "Fun",
        "Snippets": {
            "TypeScriptSnippet": null,
            "CssSnippet": null,
            "HtmlSnippet": null,
            "HasSnippets": false
        }
    }
]