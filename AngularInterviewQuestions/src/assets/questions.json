[
    {
        "QuestionId": 1,
        "Text": "What did you learn about Angular yesterday/this week?",
        "Category": "General",
        "Snippets": {
            "TypeScriptSnippet": "import { Component, ContentChildren, Directive, Input, QueryList } from '@angular/core';\r\n\r\n@Directive({selector: 'pane'})\r\nexport class Pane {\r\n@Input() id: string;\r\n}\r\n\r\n@Component({\r\nselector: 'tab',\r\ntemplate: `\r\n    <div>panes: {{serializedPanes}}</div>\r\n  `\r\n})\r\nexport class Tab {\r\n@ContentChildren(Pane) panes: QueryList<Pane>;\r\n            get serializedPanes(): string { return this.panes ? this.panes.map(p => p.id).join(', ') : ''; }\r\n}\r\n\r\n@Component({\r\nselector: 'example-app',\r\ntemplate: `\r\n    <tab>\r\n      <pane id=\"1\"></pane>\r\n      <pane id=\"2\"></pane>\r\n      <pane id=\"3\" *ngIf=\"shouldShow\"></pane>\r\n    </tab>\r\n    <button (click)=\"show()\">Show 3</button>\r\n  `,\r\n})\r\nexport class ContentChildrenComp {\r\nshouldShow = false;\r\nshow() { this.shouldShow = true; }\r\n}",
            "CssSnippet": ":host-context(.theme-light) h2 {\r\n            background-color: red;\r\n}",
            "HtmlSnippet": "<div *ngIf='someObservableData | async as data; else loading'>{{data}}</div>\r\n\r\n<ng-template #loading>\r\nLoading Data...\r\n</ng-template>",
            "HasSnippets": true
        },
        "Answers": [
            {
                "AnsweerId": 1,
                "QuestionId": 0,
                "Snippets": {
                    "TypeScriptSnippet": "import { Component, ContentChildren, Directive, Input, QueryList } from '@angular/core';\r\n\r\n@Directive({selector: 'pane'})\r\nexport class Pane {\r\n@Input() id: string;\r\n}\r\n\r\n@Component({\r\nselector: 'tab',\r\ntemplate: `\r\n    <div>panes: {{serializedPanes}}</div>\r\n  `\r\n})\r\nexport class Tab {\r\n@ContentChildren(Pane) panes: QueryList<Pane>;\r\n            get serializedPanes(): string { return this.panes ? this.panes.map(p => p.id).join(', ') : ''; }\r\n}\r\n\r\n@Component({\r\nselector: 'example-app',\r\ntemplate: `\r\n    <tab>\r\n      <pane id=\"1\"></pane>\r\n      <pane id=\"2\"></pane>\r\n      <pane id=\"3\" *ngIf=\"shouldShow\"></pane>\r\n    </tab>\r\n    <button (click)=\"show()\">Show 3</button>\r\n  `,\r\n})\r\nexport class ContentChildrenComp {\r\nshouldShow = false;\r\nshow() { this.shouldShow = true; }\r\n}",
                    "CssSnippet": ":host-context(.theme-light) h2 {\r\n            background-color: red;\r\n}",
                    "HtmlSnippet": "<div *ngIf='someObservableData | async as data; else loading'>{{data}}</div>\r\n\r\n<ng-template #loading>\r\nLoading Data...\r\n</ng-template>",
                    "HasSnippets": true
                },
                "Text": "1 This is an answer to a very important questionn."
            }
        ]
    },
    {
        "QuestionId": 2,
        "Text": "What are some of the reasons you would choose to use Angular in your project?",
        "Category": "General",
        "Snippets": {
            "TypeScriptSnippet": "import { Component, ContentChildren, Directive, Input, QueryList } from '@angular/core';\r\n\r\n@Directive({selector: 'pane'})\r\nexport class Pane {\r\n@Input() id: string;\r\n}\r\n\r\n@Component({\r\nselector: 'tab',\r\ntemplate: `\r\n    <div>panes: {{serializedPanes}}</div>\r\n  `\r\n})\r\nexport class Tab {\r\n@ContentChildren(Pane) panes: QueryList<Pane>;\r\n            get serializedPanes(): string { return this.panes ? this.panes.map(p => p.id).join(', ') : ''; }\r\n}\r\n\r\n@Component({\r\nselector: 'example-app',\r\ntemplate: `\r\n    <tab>\r\n      <pane id=\"1\"></pane>\r\n      <pane id=\"2\"></pane>\r\n      <pane id=\"3\" *ngIf=\"shouldShow\"></pane>\r\n    </tab>\r\n    <button (click)=\"show()\">Show 3</button>\r\n  `,\r\n})\r\nexport class ContentChildrenComp {\r\nshouldShow = false;\r\nshow() { this.shouldShow = true; }\r\n}",
            "CssSnippet": ":host-context(.theme-light) h2 {\r\n            background-color: red;\r\n}",
            "HtmlSnippet": "<div *ngIf='someObservableData | async as data; else loading'>{{data}}</div>\r\n\r\n<ng-template #loading>\r\nLoading Data...\r\n</ng-template>",
            "HasSnippets": true
        },
        "Answers": [
            {
                "AnsweerId": 2,
                "QuestionId": 0,
                "Snippets": {
                    "TypeScriptSnippet": "import { Component, ContentChildren, Directive, Input, QueryList } from '@angular/core';\r\n\r\n@Directive({selector: 'pane'})\r\nexport class Pane {\r\n@Input() id: string;\r\n}\r\n\r\n@Component({\r\nselector: 'tab',\r\ntemplate: `\r\n    <div>panes: {{serializedPanes}}</div>\r\n  `\r\n})\r\nexport class Tab {\r\n@ContentChildren(Pane) panes: QueryList<Pane>;\r\n            get serializedPanes(): string { return this.panes ? this.panes.map(p => p.id).join(', ') : ''; }\r\n}\r\n\r\n@Component({\r\nselector: 'example-app',\r\ntemplate: `\r\n    <tab>\r\n      <pane id=\"1\"></pane>\r\n      <pane id=\"2\"></pane>\r\n      <pane id=\"3\" *ngIf=\"shouldShow\"></pane>\r\n    </tab>\r\n    <button (click)=\"show()\">Show 3</button>\r\n  `,\r\n})\r\nexport class ContentChildrenComp {\r\nshouldShow = false;\r\nshow() { this.shouldShow = true; }\r\n}",
                    "CssSnippet": ":host-context(.theme-light) h2 {\r\n            background-color: red;\r\n}",
                    "HtmlSnippet": "<div *ngIf='someObservableData | async as data; else loading'>{{data}}</div>\r\n\r\n<ng-template #loading>\r\nLoading Data...\r\n</ng-template>",
                    "HasSnippets": true
                },
                "Text": "2 This is an answer to a very important questionn."
            }
        ]
    },
    {
        "QuestionId": 3,
        "Text": "What did you like about working with Angular?",
        "Category": "General",
        "Snippets": {
            "TypeScriptSnippet": "import { Component, ContentChildren, Directive, Input, QueryList } from '@angular/core';\r\n\r\n@Directive({selector: 'pane'})\r\nexport class Pane {\r\n@Input() id: string;\r\n}\r\n\r\n@Component({\r\nselector: 'tab',\r\ntemplate: `\r\n    <div>panes: {{serializedPanes}}</div>\r\n  `\r\n})\r\nexport class Tab {\r\n@ContentChildren(Pane) panes: QueryList<Pane>;\r\n            get serializedPanes(): string { return this.panes ? this.panes.map(p => p.id).join(', ') : ''; }\r\n}\r\n\r\n@Component({\r\nselector: 'example-app',\r\ntemplate: `\r\n    <tab>\r\n      <pane id=\"1\"></pane>\r\n      <pane id=\"2\"></pane>\r\n      <pane id=\"3\" *ngIf=\"shouldShow\"></pane>\r\n    </tab>\r\n    <button (click)=\"show()\">Show 3</button>\r\n  `,\r\n})\r\nexport class ContentChildrenComp {\r\nshouldShow = false;\r\nshow() { this.shouldShow = true; }\r\n}",
            "CssSnippet": ":host-context(.theme-light) h2 {\r\n            background-color: red;\r\n}",
            "HtmlSnippet": "<div *ngIf='someObservableData | async as data; else loading'>{{data}}</div>\r\n\r\n<ng-template #loading>\r\nLoading Data...\r\n</ng-template>",
            "HasSnippets": true
        },
        "Answers": [
            {
                "AnsweerId": 3,
                "QuestionId": 0,
                "Snippets": {
                    "TypeScriptSnippet": "import { Component, ContentChildren, Directive, Input, QueryList } from '@angular/core';\r\n\r\n@Directive({selector: 'pane'})\r\nexport class Pane {\r\n@Input() id: string;\r\n}\r\n\r\n@Component({\r\nselector: 'tab',\r\ntemplate: `\r\n    <div>panes: {{serializedPanes}}</div>\r\n  `\r\n})\r\nexport class Tab {\r\n@ContentChildren(Pane) panes: QueryList<Pane>;\r\n            get serializedPanes(): string { return this.panes ? this.panes.map(p => p.id).join(', ') : ''; }\r\n}\r\n\r\n@Component({\r\nselector: 'example-app',\r\ntemplate: `\r\n    <tab>\r\n      <pane id=\"1\"></pane>\r\n      <pane id=\"2\"></pane>\r\n      <pane id=\"3\" *ngIf=\"shouldShow\"></pane>\r\n    </tab>\r\n    <button (click)=\"show()\">Show 3</button>\r\n  `,\r\n})\r\nexport class ContentChildrenComp {\r\nshouldShow = false;\r\nshow() { this.shouldShow = true; }\r\n}",
                    "CssSnippet": ":host-context(.theme-light) h2 {\r\n            background-color: red;\r\n}",
                    "HtmlSnippet": "<div *ngIf='someObservableData | async as data; else loading'>{{data}}</div>\r\n\r\n<ng-template #loading>\r\nLoading Data...\r\n</ng-template>",
                    "HasSnippets": true
                },
                "Text": "3 This is an answer to a very important questionn."
            }
        ]
    },
    {
        "QuestionId": 4,
        "Text": "How do you keep your Angular code more readable and maintainable?",
        "Category": "General",
        "Snippets": {
            "TypeScriptSnippet": "import { Component, ContentChildren, Directive, Input, QueryList } from '@angular/core';\r\n\r\n@Directive({selector: 'pane'})\r\nexport class Pane {\r\n@Input() id: string;\r\n}\r\n\r\n@Component({\r\nselector: 'tab',\r\ntemplate: `\r\n    <div>panes: {{serializedPanes}}</div>\r\n  `\r\n})\r\nexport class Tab {\r\n@ContentChildren(Pane) panes: QueryList<Pane>;\r\n            get serializedPanes(): string { return this.panes ? this.panes.map(p => p.id).join(', ') : ''; }\r\n}\r\n\r\n@Component({\r\nselector: 'example-app',\r\ntemplate: `\r\n    <tab>\r\n      <pane id=\"1\"></pane>\r\n      <pane id=\"2\"></pane>\r\n      <pane id=\"3\" *ngIf=\"shouldShow\"></pane>\r\n    </tab>\r\n    <button (click)=\"show()\">Show 3</button>\r\n  `,\r\n})\r\nexport class ContentChildrenComp {\r\nshouldShow = false;\r\nshow() { this.shouldShow = true; }\r\n}",
            "CssSnippet": ":host-context(.theme-light) h2 {\r\n            background-color: red;\r\n}",
            "HtmlSnippet": "<div *ngIf='someObservableData | async as data; else loading'>{{data}}</div>\r\n\r\n<ng-template #loading>\r\nLoading Data...\r\n</ng-template>",
            "HasSnippets": true
        },
        "Answers": [
            {
                "AnsweerId": 4,
                "QuestionId": 0,
                "Snippets": {
                    "TypeScriptSnippet": "import { Component, ContentChildren, Directive, Input, QueryList } from '@angular/core';\r\n\r\n@Directive({selector: 'pane'})\r\nexport class Pane {\r\n@Input() id: string;\r\n}\r\n\r\n@Component({\r\nselector: 'tab',\r\ntemplate: `\r\n    <div>panes: {{serializedPanes}}</div>\r\n  `\r\n})\r\nexport class Tab {\r\n@ContentChildren(Pane) panes: QueryList<Pane>;\r\n            get serializedPanes(): string { return this.panes ? this.panes.map(p => p.id).join(', ') : ''; }\r\n}\r\n\r\n@Component({\r\nselector: 'example-app',\r\ntemplate: `\r\n    <tab>\r\n      <pane id=\"1\"></pane>\r\n      <pane id=\"2\"></pane>\r\n      <pane id=\"3\" *ngIf=\"shouldShow\"></pane>\r\n    </tab>\r\n    <button (click)=\"show()\">Show 3</button>\r\n  `,\r\n})\r\nexport class ContentChildrenComp {\r\nshouldShow = false;\r\nshow() { this.shouldShow = true; }\r\n}",
                    "CssSnippet": ":host-context(.theme-light) h2 {\r\n            background-color: red;\r\n}",
                    "HtmlSnippet": "<div *ngIf='someObservableData | async as data; else loading'>{{data}}</div>\r\n\r\n<ng-template #loading>\r\nLoading Data...\r\n</ng-template>",
                    "HasSnippets": true
                },
                "Text": "4 This is an answer to a very important questionn."
            }
        ]
    },
    {
        "QuestionId": 5,
        "Text": "What does testable code mean to you in context of Angular?",
        "Category": "General",
        "Snippets": {
            "TypeScriptSnippet": "import { Component, ContentChildren, Directive, Input, QueryList } from '@angular/core';\r\n\r\n@Directive({selector: 'pane'})\r\nexport class Pane {\r\n@Input() id: string;\r\n}\r\n\r\n@Component({\r\nselector: 'tab',\r\ntemplate: `\r\n    <div>panes: {{serializedPanes}}</div>\r\n  `\r\n})\r\nexport class Tab {\r\n@ContentChildren(Pane) panes: QueryList<Pane>;\r\n            get serializedPanes(): string { return this.panes ? this.panes.map(p => p.id).join(', ') : ''; }\r\n}\r\n\r\n@Component({\r\nselector: 'example-app',\r\ntemplate: `\r\n    <tab>\r\n      <pane id=\"1\"></pane>\r\n      <pane id=\"2\"></pane>\r\n      <pane id=\"3\" *ngIf=\"shouldShow\"></pane>\r\n    </tab>\r\n    <button (click)=\"show()\">Show 3</button>\r\n  `,\r\n})\r\nexport class ContentChildrenComp {\r\nshouldShow = false;\r\nshow() { this.shouldShow = true; }\r\n}",
            "CssSnippet": ":host-context(.theme-light) h2 {\r\n            background-color: red;\r\n}",
            "HtmlSnippet": "<div *ngIf='someObservableData | async as data; else loading'>{{data}}</div>\r\n\r\n<ng-template #loading>\r\nLoading Data...\r\n</ng-template>",
            "HasSnippets": true
        },
        "Answers": [
            {
                "AnsweerId": 5,
                "QuestionId": 0,
                "Snippets": {
                    "TypeScriptSnippet": "import { Component, ContentChildren, Directive, Input, QueryList } from '@angular/core';\r\n\r\n@Directive({selector: 'pane'})\r\nexport class Pane {\r\n@Input() id: string;\r\n}\r\n\r\n@Component({\r\nselector: 'tab',\r\ntemplate: `\r\n    <div>panes: {{serializedPanes}}</div>\r\n  `\r\n})\r\nexport class Tab {\r\n@ContentChildren(Pane) panes: QueryList<Pane>;\r\n            get serializedPanes(): string { return this.panes ? this.panes.map(p => p.id).join(', ') : ''; }\r\n}\r\n\r\n@Component({\r\nselector: 'example-app',\r\ntemplate: `\r\n    <tab>\r\n      <pane id=\"1\"></pane>\r\n      <pane id=\"2\"></pane>\r\n      <pane id=\"3\" *ngIf=\"shouldShow\"></pane>\r\n    </tab>\r\n    <button (click)=\"show()\">Show 3</button>\r\n  `,\r\n})\r\nexport class ContentChildrenComp {\r\nshouldShow = false;\r\nshow() { this.shouldShow = true; }\r\n}",
                    "CssSnippet": ":host-context(.theme-light) h2 {\r\n            background-color: red;\r\n}",
                    "HtmlSnippet": "<div *ngIf='someObservableData | async as data; else loading'>{{data}}</div>\r\n\r\n<ng-template #loading>\r\nLoading Data...\r\n</ng-template>",
                    "HasSnippets": true
                },
                "Text": "5 This is an answer to a very important questionn."
            }
        ]
    }
]